#
# Copyright IBM Corp. All Rights Reserved.
#
# SPDX-License-Identifier: Apache-2.0
#
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: org-peer2-tls-cert
  namespace: ${ORG_NS}
spec:
  isCA: false
  privateKey:
    algorithm: ECDSA
    size: 256
  dnsNames:
    - localhost
    - org-peer2
    - org-peer-gateway-svc
    - org-peer2.${ORG_NS}.svc.cluster.local
    - org-peer2.${DOMAIN}
    - org-peer2-gateway-svc.${DOMAIN}
  ipAddresses:
    - 127.0.0.1
  secretName: org-peer2-tls-cert
  issuerRef:
    name: org-tls-cert-issuer


---
apiVersion: v1
kind: ConfigMap
metadata:
  name: org-peer2-config
data:
  FABRIC_CFG_PATH: /var/hyperledger/fabric/config
  FABRIC_LOGGING_SPEC: "debug:cauthdsl,policies,msp,grpc,peer.gossip.mcs,gossip,leveldbhelper=info"
  CORE_PEER_TLS_ENABLED: "true"
  CORE_PEER_TLS_CERT_FILE: /var/hyperledger/fabric/config/tls/tls.crt
  CORE_PEER_TLS_KEY_FILE: /var/hyperledger/fabric/config/tls/tls.key
  CORE_PEER_TLS_ROOTCERT_FILE: /var/hyperledger/fabric/config/tls/ca.crt
  CORE_PEER_ID: org-peer2.org.example.com
  CORE_PEER_ADDRESS: org-peer2:7051
  CORE_PEER_LISTENADDRESS: 0.0.0.0:7051
  CORE_PEER_CHAINCODEADDRESS: org-peer2:7052
  CORE_PEER_CHAINCODELISTENADDRESS: 0.0.0.0:7052
  CORE_PEER_GOSSIP_BOOTSTRAP: org-peer1:7051
  CORE_PEER_GOSSIP_EXTERNALENDPOINT: org-peer2.test-network.svc.cluster.local:7051
  CORE_PEER_LOCALMSPID: Org1MSP
  CORE_PEER_MSPCONFIGPATH: /var/hyperledger/fabric/organizations/peerOrganizations/org.example.com/peers/org-peer2.org.example.com/msp
  CORE_OPERATIONS_LISTENADDRESS: 0.0.0.0:9443
  CORE_PEER_FILESYSTEMPATH: /var/hyperledger/fabric/data/org-peer2.org.example.com
  CORE_LEDGER_SNAPSHOTS_ROOTDIR: /var/hyperledger/fabric/data/org-peer2.org.example.com/snapshots
  CHAINCODE_AS_A_SERVICE_BUILDER_CONFIG: "{\"peername\":\"orgpeer1\"}"
  FABRIC_K8S_BUILDER_OBJECT_NAME_PREFIX: org-peer2-cc
  CORE_LEDGER_STATE_STATEDATABASE: CouchDB
  CORE_LEDGER_STATE_COUCHDBCONFIG_MAXRETRIESONSTARTUP: "20"
  CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS: localhost:5984
  CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME: admin
  CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD: adminpw

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: org-peer2
spec:
  replicas: 1
  selector:
    matchLabels:
      app: org-peer2
  template:
    metadata:
      labels:
        app: org-peer2
        org: org
    spec:
      containers:
        - name: main
          image: ${FABRIC_PEER_IMAGE}
          imagePullPolicy: IfNotPresent
          envFrom:
            - configMapRef:
                name: org-peer2-config
          ports:
            - containerPort: 7051
            - containerPort: 7052
            - containerPort: 9443
          volumeMounts:
            - name: fabric-volume
              mountPath: /var/hyperledger
            - name: fabric-config
              mountPath: /var/hyperledger/fabric/config
            - name: tls-cert-volume
              mountPath: /var/hyperledger/fabric/config/tls
              readOnly: true
        - name: couchdb
          image: couchdb:${COUCHDB_VERSION}
          imagePullPolicy: IfNotPresent
          env:
            - name: "COUCHDB_USER"
              value: "admin" 
            - name: "COUCHDB_PASSWORD"
              value: "adminpw"
          ports:
              - containerPort: 5984
      volumes:
        - name: fabric-volume
          persistentVolumeClaim:
            claimName: fabric-org
        - name: fabric-config
          configMap:
            name: org-config
        - name: tls-cert-volume
          secret:
            secretName: org-peer2-tls-cert
---
apiVersion: v1
kind: Service
metadata:
  name: org-peer2
spec:
  ports:
    - name: grpc
      port: 7051
      targetPort: 7051
      nodePort: 32055
      protocol: TCP
    - name: chaincode
      port: 7052
      protocol: TCP
      targetPort: 7052
      nodePort: 32056
    - name: operations
      port: 9443
      protocol: TCP
      targetPort: 9443
      nodePort: 32057
  selector:
    app: org-peer2
  type: NodePort
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/proxy-connect-timeout: 60s
    nginx.ingress.kubernetes.io/ssl-passthrough: "true"
  labels:
    app: org-peer2
  name: org-peer2
spec:
  ingressClassName: nginx
  rules:
    - host: org-peer2.${DOMAIN}
      http:
        paths:
          - backend:
              service:
                name: org-peer2
                port:
                  name: grpc
            path: /
            pathType: ImplementationSpecific
  tls:
    - hosts:
        - org-peer2.${DOMAIN}
